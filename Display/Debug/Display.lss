
Display.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000059a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000005ee  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000005ee  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000620  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000e8  00000000  00000000  0000065c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000016fd  00000000  00000000  00000744  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000924  00000000  00000000  00001e41  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000897  00000000  00000000  00002765  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000002bc  00000000  00000000  00002ffc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000669  00000000  00000000  000032b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00001202  00000000  00000000  00003921  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000d8  00000000  00000000  00004b23  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	20 c0       	rjmp	.+64     	; 0x42 <__ctors_end>
   2:	27 c0       	rjmp	.+78     	; 0x52 <__bad_interrupt>
   4:	26 c0       	rjmp	.+76     	; 0x52 <__bad_interrupt>
   6:	25 c0       	rjmp	.+74     	; 0x52 <__bad_interrupt>
   8:	24 c0       	rjmp	.+72     	; 0x52 <__bad_interrupt>
   a:	23 c0       	rjmp	.+70     	; 0x52 <__bad_interrupt>
   c:	22 c0       	rjmp	.+68     	; 0x52 <__bad_interrupt>
   e:	21 c0       	rjmp	.+66     	; 0x52 <__bad_interrupt>
  10:	20 c0       	rjmp	.+64     	; 0x52 <__bad_interrupt>
  12:	1f c0       	rjmp	.+62     	; 0x52 <__bad_interrupt>
  14:	1e c0       	rjmp	.+60     	; 0x52 <__bad_interrupt>
  16:	1d c0       	rjmp	.+58     	; 0x52 <__bad_interrupt>
  18:	1c c0       	rjmp	.+56     	; 0x52 <__bad_interrupt>
  1a:	1b c0       	rjmp	.+54     	; 0x52 <__bad_interrupt>
  1c:	1a c0       	rjmp	.+52     	; 0x52 <__bad_interrupt>

0000001e <__trampolines_end>:
  1e:	3f 06       	cpc	r3, r31
  20:	5b 4f       	sbci	r21, 0xFB	; 251
  22:	66 6d       	ori	r22, 0xD6	; 214
  24:	7d 07       	cpc	r23, r29
  26:	7f 6f       	ori	r23, 0xFF	; 255
  28:	77 7c       	andi	r23, 0xC7	; 199
  2a:	39 5e       	subi	r19, 0xE9	; 233
  2c:	79 71       	andi	r23, 0x19	; 25
  2e:	3d 76       	andi	r19, 0x6D	; 109
  30:	06 1f       	adc	r16, r22
  32:	76 38       	cpi	r23, 0x86	; 134
  34:	15 54       	subi	r17, 0x45	; 69
  36:	3f 73       	andi	r19, 0x3F	; 63
  38:	67 50       	subi	r22, 0x07	; 7
  3a:	6d 78       	andi	r22, 0x8D	; 141
  3c:	3e 1c       	adc	r3, r14
  3e:	2a 76       	andi	r18, 0x6A	; 106
  40:	6e 5b       	subi	r22, 0xBE	; 190

00000042 <__ctors_end>:
  42:	11 24       	eor	r1, r1
  44:	1f be       	out	0x3f, r1	; 63
  46:	cf e5       	ldi	r28, 0x5F	; 95
  48:	d2 e0       	ldi	r29, 0x02	; 2
  4a:	de bf       	out	0x3e, r29	; 62
  4c:	cd bf       	out	0x3d, r28	; 61
  4e:	0f d0       	rcall	.+30     	; 0x6e <main>
  50:	a2 c2       	rjmp	.+1348   	; 0x596 <_exit>

00000052 <__bad_interrupt>:
  52:	d6 cf       	rjmp	.-84     	; 0x0 <__vectors>

00000054 <_Z7initADCv>:
  54:	82 e0       	ldi	r24, 0x02	; 2
  56:	87 b9       	out	0x07, r24	; 7
  58:	84 e8       	ldi	r24, 0x84	; 132
  5a:	86 b9       	out	0x06, r24	; 6
  5c:	08 95       	ret

0000005e <_Z3adcv>:
int adc(void)
{
	uint8_t adc_lobyte; // to hold the low byte of the ADC register (ADCL)
	uint16_t raw_adc;

	ADCSRA |= (1 << ADSC);         // start ADC measurement
  5e:	36 9a       	sbi	0x06, 6	; 6
	while (ADCSRA & (1 << ADSC) ); // wait till conversion complete
  60:	36 99       	sbic	0x06, 6	; 6
  62:	fe cf       	rjmp	.-4      	; 0x60 <_Z3adcv+0x2>

	// for 10-bit resolution:
	adc_lobyte = ADCL; // get the sample value from ADCL
  64:	84 b1       	in	r24, 0x04	; 4
	raw_adc = ADCH<<8 | adc_lobyte;   // add lobyte and hibyte
  66:	25 b1       	in	r18, 0x05	; 5

	return raw_adc;
  68:	90 e0       	ldi	r25, 0x00	; 0
}
  6a:	92 2b       	or	r25, r18
  6c:	08 95       	ret

0000006e <main>:



int main() {
  6e:	cf 93       	push	r28
  70:	df 93       	push	r29
  72:	00 d0       	rcall	.+0      	; 0x74 <main+0x6>
  74:	00 d0       	rcall	.+0      	; 0x76 <main+0x8>
  76:	1f 92       	push	r1
  78:	cd b7       	in	r28, 0x3d	; 61
  7a:	de b7       	in	r29, 0x3e	; 62
	TM1637 disp;
  7c:	ce 01       	movw	r24, r28
  7e:	01 96       	adiw	r24, 0x01	; 1
  80:	a7 d0       	rcall	.+334    	; 0x1d0 <_ZN6TM1637C1Ev>
	disp.setBrightness(0x0f);
  82:	6f e0       	ldi	r22, 0x0F	; 15
  84:	ce 01       	movw	r24, r28
  86:	01 96       	adiw	r24, 0x01	; 1
  88:	35 d1       	rcall	.+618    	; 0x2f4 <_ZN6TM163713setBrightnessEh>

	int i;
	initADC();
  8a:	e4 df       	rcall	.-56     	; 0x54 <_Z7initADCv>
			_delay_ms(20);
		}
	  
		value = value/FILTER;
		*/
		value = adc();
  8c:	e8 df       	rcall	.-48     	; 0x5e <_Z3adcv>
  8e:	9b 83       	std	Y+3, r25	; 0x03
  90:	8a 83       	std	Y+2, r24	; 0x02
		value2 = adc();
  92:	e5 df       	rcall	.-54     	; 0x5e <_Z3adcv>
  94:	9d 83       	std	Y+5, r25	; 0x05
  96:	8c 83       	std	Y+4, r24	; 0x04
		if (((value - value2) < 1) && ((value2 - value) < 1)) {
  98:	8a 81       	ldd	r24, Y+2	; 0x02
  9a:	9b 81       	ldd	r25, Y+3	; 0x03
  9c:	2c 81       	ldd	r18, Y+4	; 0x04
  9e:	3d 81       	ldd	r19, Y+5	; 0x05
  a0:	82 1b       	sub	r24, r18
  a2:	93 0b       	sbc	r25, r19
  a4:	18 16       	cp	r1, r24
  a6:	19 06       	cpc	r1, r25
  a8:	8c f3       	brlt	.-30     	; 0x8c <main+0x1e>
  aa:	8c 81       	ldd	r24, Y+4	; 0x04
  ac:	9d 81       	ldd	r25, Y+5	; 0x05
  ae:	2a 81       	ldd	r18, Y+2	; 0x02
  b0:	3b 81       	ldd	r19, Y+3	; 0x03
  b2:	82 1b       	sub	r24, r18
  b4:	93 0b       	sbc	r25, r19
  b6:	18 16       	cp	r1, r24
  b8:	19 06       	cpc	r1, r25
  ba:	44 f3       	brlt	.-48     	; 0x8c <main+0x1e>
  bc:	2e c0       	rjmp	.+92     	; 0x11a <main+0xac>
			value += value2;
			value = (value / 2) - 526;
			if (value < 0) value = -value;
  be:	8a 81       	ldd	r24, Y+2	; 0x02
  c0:	9b 81       	ldd	r25, Y+3	; 0x03
  c2:	91 95       	neg	r25
  c4:	81 95       	neg	r24
  c6:	91 09       	sbc	r25, r1
  c8:	9b 83       	std	Y+3, r25	; 0x03
  ca:	8a 83       	std	Y+2, r24	; 0x02
			value = (int) ((float) value *  ma_step);
  cc:	6a 81       	ldd	r22, Y+2	; 0x02
  ce:	7b 81       	ldd	r23, Y+3	; 0x03
  d0:	07 2e       	mov	r0, r23
  d2:	00 0c       	add	r0, r0
  d4:	88 0b       	sbc	r24, r24
  d6:	99 0b       	sbc	r25, r25
  d8:	45 d1       	rcall	.+650    	; 0x364 <__floatsisf>
  da:	20 e0       	ldi	r18, 0x00	; 0
  dc:	30 e0       	ldi	r19, 0x00	; 0
  de:	40 e0       	ldi	r20, 0x00	; 0
  e0:	51 e4       	ldi	r21, 0x41	; 65
  e2:	a4 d1       	rcall	.+840    	; 0x42c <__mulsf3>
  e4:	0c d1       	rcall	.+536    	; 0x2fe <__fixsfsi>
  e6:	7b 83       	std	Y+3, r23	; 0x03
  e8:	6a 83       	std	Y+2, r22	; 0x02
			disp.clear();
  ea:	ce 01       	movw	r24, r28
  ec:	01 96       	adiw	r24, 0x01	; 1
  ee:	66 d0       	rcall	.+204    	; 0x1bc <_ZN6TM16375clearEv>
			disp.setNumber(value);
  f0:	4a 81       	ldd	r20, Y+2	; 0x02
  f2:	5b 81       	ldd	r21, Y+3	; 0x03
  f4:	05 2e       	mov	r0, r21
  f6:	00 0c       	add	r0, r0
  f8:	66 0b       	sbc	r22, r22
  fa:	77 0b       	sbc	r23, r23
  fc:	01 e0       	ldi	r16, 0x01	; 1
  fe:	23 e0       	ldi	r18, 0x03	; 3
 100:	ce 01       	movw	r24, r28
 102:	01 96       	adiw	r24, 0x01	; 1
 104:	90 d0       	rcall	.+288    	; 0x226 <_ZN6TM16379setNumberEmhh>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 106:	2f ef       	ldi	r18, 0xFF	; 255
 108:	81 ee       	ldi	r24, 0xE1	; 225
 10a:	94 e0       	ldi	r25, 0x04	; 4
 10c:	21 50       	subi	r18, 0x01	; 1
 10e:	80 40       	sbci	r24, 0x00	; 0
 110:	90 40       	sbci	r25, 0x00	; 0
 112:	e1 f7       	brne	.-8      	; 0x10c <main+0x9e>
 114:	00 c0       	rjmp	.+0      	; 0x116 <main+0xa8>
 116:	00 00       	nop
 118:	b9 cf       	rjmp	.-142    	; 0x8c <main+0x1e>
		value = value/FILTER;
		*/
		value = adc();
		value2 = adc();
		if (((value - value2) < 1) && ((value2 - value) < 1)) {
			value += value2;
 11a:	2c 81       	ldd	r18, Y+4	; 0x04
 11c:	3d 81       	ldd	r19, Y+5	; 0x05
 11e:	8a 81       	ldd	r24, Y+2	; 0x02
 120:	9b 81       	ldd	r25, Y+3	; 0x03
 122:	82 0f       	add	r24, r18
 124:	93 1f       	adc	r25, r19
 126:	9b 83       	std	Y+3, r25	; 0x03
 128:	8a 83       	std	Y+2, r24	; 0x02
			value = (value / 2) - 526;
 12a:	8a 81       	ldd	r24, Y+2	; 0x02
 12c:	9b 81       	ldd	r25, Y+3	; 0x03
 12e:	99 23       	and	r25, r25
 130:	0c f4       	brge	.+2      	; 0x134 <main+0xc6>
 132:	01 96       	adiw	r24, 0x01	; 1
 134:	95 95       	asr	r25
 136:	87 95       	ror	r24
 138:	8e 50       	subi	r24, 0x0E	; 14
 13a:	92 40       	sbci	r25, 0x02	; 2
 13c:	9b 83       	std	Y+3, r25	; 0x03
 13e:	8a 83       	std	Y+2, r24	; 0x02
			if (value < 0) value = -value;
 140:	8a 81       	ldd	r24, Y+2	; 0x02
 142:	9b 81       	ldd	r25, Y+3	; 0x03
 144:	99 23       	and	r25, r25
 146:	14 f6       	brge	.-124    	; 0xcc <main+0x5e>
 148:	ba cf       	rjmp	.-140    	; 0xbe <main+0x50>

0000014a <_ZN12_GLOBAL__N_15startEv>:
    ++offset;
    _delay_ms(250);
  }
}

void TM1637::setDots(const uint8_t mask) { _dotMask = mask; }
 14a:	c2 9a       	sbi	0x18, 2	; 24
 14c:	c1 9a       	sbi	0x18, 1	; 24
 14e:	00 00       	nop
 150:	c1 98       	cbi	0x18, 1	; 24
 152:	00 00       	nop
 154:	08 95       	ret

00000156 <_ZN12_GLOBAL__N_14stopEv>:
 156:	c2 98       	cbi	0x18, 2	; 24
 158:	00 00       	nop
 15a:	c2 9a       	sbi	0x18, 2	; 24
 15c:	c1 98       	cbi	0x18, 1	; 24
 15e:	00 00       	nop
 160:	c1 9a       	sbi	0x18, 1	; 24
 162:	08 95       	ret

00000164 <_ZN12_GLOBAL__N_14sendEh>:
 164:	98 e0       	ldi	r25, 0x08	; 8
 166:	c2 98       	cbi	0x18, 2	; 24
 168:	80 ff       	sbrs	r24, 0
 16a:	02 c0       	rjmp	.+4      	; 0x170 <_ZN12_GLOBAL__N_14sendEh+0xc>
 16c:	c1 9a       	sbi	0x18, 1	; 24
 16e:	01 c0       	rjmp	.+2      	; 0x172 <_ZN12_GLOBAL__N_14sendEh+0xe>
 170:	c1 98       	cbi	0x18, 1	; 24
 172:	00 00       	nop
 174:	c2 9a       	sbi	0x18, 2	; 24
 176:	00 00       	nop
 178:	86 95       	lsr	r24
 17a:	91 50       	subi	r25, 0x01	; 1
 17c:	a1 f7       	brne	.-24     	; 0x166 <_ZN12_GLOBAL__N_14sendEh+0x2>
 17e:	c2 98       	cbi	0x18, 2	; 24
 180:	c1 98       	cbi	0x18, 1	; 24
 182:	00 00       	nop
 184:	c2 9a       	sbi	0x18, 2	; 24
 186:	00 00       	nop
 188:	08 95       	ret

0000018a <_ZN12_GLOBAL__N_18send_cmdEh>:
 18a:	cf 93       	push	r28
 18c:	c8 2f       	mov	r28, r24
 18e:	dd df       	rcall	.-70     	; 0x14a <_ZN12_GLOBAL__N_15startEv>
 190:	8c 2f       	mov	r24, r28
 192:	e8 df       	rcall	.-48     	; 0x164 <_ZN12_GLOBAL__N_14sendEh>
 194:	e0 df       	rcall	.-64     	; 0x156 <_ZN12_GLOBAL__N_14stopEv>
 196:	cf 91       	pop	r28
 198:	08 95       	ret

0000019a <_ZN12_GLOBAL__N_19send_dataEhh>:
 19a:	cf 93       	push	r28
 19c:	df 93       	push	r29
 19e:	d8 2f       	mov	r29, r24
 1a0:	c6 2f       	mov	r28, r22
 1a2:	84 e4       	ldi	r24, 0x44	; 68
 1a4:	f2 df       	rcall	.-28     	; 0x18a <_ZN12_GLOBAL__N_18send_cmdEh>
 1a6:	d1 df       	rcall	.-94     	; 0x14a <_ZN12_GLOBAL__N_15startEv>
 1a8:	8d 2f       	mov	r24, r29
 1aa:	80 6c       	ori	r24, 0xC0	; 192
 1ac:	db df       	rcall	.-74     	; 0x164 <_ZN12_GLOBAL__N_14sendEh>
 1ae:	8c 2f       	mov	r24, r28
 1b0:	d9 df       	rcall	.-78     	; 0x164 <_ZN12_GLOBAL__N_14sendEh>
 1b2:	d1 df       	rcall	.-94     	; 0x156 <_ZN12_GLOBAL__N_14stopEv>
 1b4:	00 00       	nop
 1b6:	df 91       	pop	r29
 1b8:	cf 91       	pop	r28
 1ba:	08 95       	ret

000001bc <_ZN6TM16375clearEv>:
 1bc:	cf 93       	push	r28
 1be:	c0 e0       	ldi	r28, 0x00	; 0
 1c0:	60 e0       	ldi	r22, 0x00	; 0
 1c2:	8c 2f       	mov	r24, r28
 1c4:	ea df       	rcall	.-44     	; 0x19a <_ZN12_GLOBAL__N_19send_dataEhh>
 1c6:	cf 5f       	subi	r28, 0xFF	; 255
 1c8:	c4 30       	cpi	r28, 0x04	; 4
 1ca:	d1 f7       	brne	.-12     	; 0x1c0 <_ZN6TM16375clearEv+0x4>
 1cc:	cf 91       	pop	r28
 1ce:	08 95       	ret

000001d0 <_ZN6TM1637C1Ev>:
 1d0:	cf 93       	push	r28
 1d2:	df 93       	push	r29
 1d4:	ec 01       	movw	r28, r24
 1d6:	18 82       	st	Y, r1
 1d8:	87 b3       	in	r24, 0x17	; 23
 1da:	86 60       	ori	r24, 0x06	; 6
 1dc:	87 bb       	out	0x17, r24	; 23
 1de:	c2 9a       	sbi	0x18, 2	; 24
 1e0:	80 e4       	ldi	r24, 0x40	; 64
 1e2:	d3 df       	rcall	.-90     	; 0x18a <_ZN12_GLOBAL__N_18send_cmdEh>
 1e4:	8f e8       	ldi	r24, 0x8F	; 143
 1e6:	d1 df       	rcall	.-94     	; 0x18a <_ZN12_GLOBAL__N_18send_cmdEh>
 1e8:	ce 01       	movw	r24, r28
 1ea:	e8 df       	rcall	.-48     	; 0x1bc <_ZN6TM16375clearEv>
 1ec:	df 91       	pop	r29
 1ee:	cf 91       	pop	r28
 1f0:	08 95       	ret

000001f2 <_ZN6TM16377setByteEhh>:
 1f2:	fc 01       	movw	r30, r24
 1f4:	86 2f       	mov	r24, r22
 1f6:	20 81       	ld	r18, Z
 1f8:	30 e0       	ldi	r19, 0x00	; 0
 1fa:	02 c0       	rjmp	.+4      	; 0x200 <_ZN6TM16377setByteEhh+0xe>
 1fc:	35 95       	asr	r19
 1fe:	27 95       	ror	r18
 200:	6a 95       	dec	r22
 202:	e2 f7       	brpl	.-8      	; 0x1fc <_ZN6TM16377setByteEhh+0xa>
 204:	20 fd       	sbrc	r18, 0
 206:	02 c0       	rjmp	.+4      	; 0x20c <_ZN6TM16377setByteEhh+0x1a>
 208:	90 e0       	ldi	r25, 0x00	; 0
 20a:	01 c0       	rjmp	.+2      	; 0x20e <_ZN6TM16377setByteEhh+0x1c>
 20c:	90 e8       	ldi	r25, 0x80	; 128
 20e:	64 2f       	mov	r22, r20
 210:	69 2b       	or	r22, r25
 212:	c3 df       	rcall	.-122    	; 0x19a <_ZN12_GLOBAL__N_19send_dataEhh>
 214:	08 95       	ret

00000216 <_ZN6TM16378setDigitEhh>:
 216:	4f 70       	andi	r20, 0x0F	; 15
 218:	e4 2f       	mov	r30, r20
 21a:	f0 e0       	ldi	r31, 0x00	; 0
 21c:	e2 5e       	subi	r30, 0xE2	; 226
 21e:	ff 4f       	sbci	r31, 0xFF	; 255
 220:	44 91       	lpm	r20, Z
 222:	e7 df       	rcall	.-50     	; 0x1f2 <_ZN6TM16377setByteEhh>
 224:	08 95       	ret

00000226 <_ZN6TM16379setNumberEmhh>:
 226:	4f 92       	push	r4
 228:	5f 92       	push	r5
 22a:	6f 92       	push	r6
 22c:	7f 92       	push	r7
 22e:	8f 92       	push	r8
 230:	9f 92       	push	r9
 232:	af 92       	push	r10
 234:	bf 92       	push	r11
 236:	cf 92       	push	r12
 238:	df 92       	push	r13
 23a:	ef 92       	push	r14
 23c:	ff 92       	push	r15
 23e:	0f 93       	push	r16
 240:	1f 93       	push	r17
 242:	cf 93       	push	r28
 244:	df 93       	push	r29
 246:	5c 01       	movw	r10, r24
 248:	6a 01       	movw	r12, r20
 24a:	7b 01       	movw	r14, r22
 24c:	c2 2f       	mov	r28, r18
 24e:	01 11       	cpse	r16, r1
 250:	1d c0       	rjmp	.+58     	; 0x28c <__stack+0x2d>
 252:	4a 30       	cpi	r20, 0x0A	; 10
 254:	51 05       	cpc	r21, r1
 256:	61 05       	cpc	r22, r1
 258:	71 05       	cpc	r23, r1
 25a:	b0 f0       	brcs	.+44     	; 0x288 <__stack+0x29>
 25c:	9a 01       	movw	r18, r20
 25e:	ab 01       	movw	r20, r22
 260:	d0 e0       	ldi	r29, 0x00	; 0
 262:	0f 2e       	mov	r0, r31
 264:	fa e0       	ldi	r31, 0x0A	; 10
 266:	4f 2e       	mov	r4, r31
 268:	51 2c       	mov	r5, r1
 26a:	61 2c       	mov	r6, r1
 26c:	71 2c       	mov	r7, r1
 26e:	f0 2d       	mov	r31, r0
 270:	ca 01       	movw	r24, r20
 272:	b9 01       	movw	r22, r18
 274:	a3 01       	movw	r20, r6
 276:	92 01       	movw	r18, r4
 278:	6c d1       	rcall	.+728    	; 0x552 <__udivmodsi4>
 27a:	df 5f       	subi	r29, 0xFF	; 255
 27c:	2a 30       	cpi	r18, 0x0A	; 10
 27e:	31 05       	cpc	r19, r1
 280:	41 05       	cpc	r20, r1
 282:	51 05       	cpc	r21, r1
 284:	a8 f7       	brcc	.-22     	; 0x270 <__stack+0x11>
 286:	01 c0       	rjmp	.+2      	; 0x28a <__stack+0x2b>
 288:	d0 e0       	ldi	r29, 0x00	; 0
 28a:	cd 0f       	add	r28, r29
 28c:	0f 2e       	mov	r0, r31
 28e:	fa e0       	ldi	r31, 0x0A	; 10
 290:	4f 2e       	mov	r4, r31
 292:	51 2c       	mov	r5, r1
 294:	61 2c       	mov	r6, r1
 296:	71 2c       	mov	r7, r1
 298:	f0 2d       	mov	r31, r0
 29a:	88 24       	eor	r8, r8
 29c:	8a 94       	dec	r8
 29e:	8c 0e       	add	r8, r28
 2a0:	c7 01       	movw	r24, r14
 2a2:	b6 01       	movw	r22, r12
 2a4:	a3 01       	movw	r20, r6
 2a6:	92 01       	movw	r18, r4
 2a8:	54 d1       	rcall	.+680    	; 0x552 <__udivmodsi4>
 2aa:	92 2e       	mov	r9, r18
 2ac:	03 2f       	mov	r16, r19
 2ae:	14 2f       	mov	r17, r20
 2b0:	d5 2f       	mov	r29, r21
 2b2:	46 2f       	mov	r20, r22
 2b4:	6c 2f       	mov	r22, r28
 2b6:	c5 01       	movw	r24, r10
 2b8:	ae df       	rcall	.-164    	; 0x216 <_ZN6TM16378setDigitEhh>
 2ba:	c9 2c       	mov	r12, r9
 2bc:	d0 2e       	mov	r13, r16
 2be:	e1 2e       	mov	r14, r17
 2c0:	fd 2e       	mov	r15, r29
 2c2:	c1 14       	cp	r12, r1
 2c4:	d1 04       	cpc	r13, r1
 2c6:	e1 04       	cpc	r14, r1
 2c8:	f1 04       	cpc	r15, r1
 2ca:	19 f0       	breq	.+6      	; 0x2d2 <__stack+0x73>
 2cc:	c8 2d       	mov	r28, r8
 2ce:	cf 3f       	cpi	r28, 0xFF	; 255
 2d0:	21 f7       	brne	.-56     	; 0x29a <__stack+0x3b>
 2d2:	df 91       	pop	r29
 2d4:	cf 91       	pop	r28
 2d6:	1f 91       	pop	r17
 2d8:	0f 91       	pop	r16
 2da:	ff 90       	pop	r15
 2dc:	ef 90       	pop	r14
 2de:	df 90       	pop	r13
 2e0:	cf 90       	pop	r12
 2e2:	bf 90       	pop	r11
 2e4:	af 90       	pop	r10
 2e6:	9f 90       	pop	r9
 2e8:	8f 90       	pop	r8
 2ea:	7f 90       	pop	r7
 2ec:	6f 90       	pop	r6
 2ee:	5f 90       	pop	r5
 2f0:	4f 90       	pop	r4
 2f2:	08 95       	ret

000002f4 <_ZN6TM163713setBrightnessEh>:

void TM1637::setBrightness(const uint8_t brightness) {
  send_cmd(TM_DISP_CTRL | TM_DISP_ENABLE | (brightness & TM_DISP_PWM_MASK));
 2f4:	86 2f       	mov	r24, r22
 2f6:	87 70       	andi	r24, 0x07	; 7
 2f8:	88 68       	ori	r24, 0x88	; 136
 2fa:	47 df       	rcall	.-370    	; 0x18a <_ZN12_GLOBAL__N_18send_cmdEh>
 2fc:	08 95       	ret

000002fe <__fixsfsi>:
 2fe:	04 d0       	rcall	.+8      	; 0x308 <__fixunssfsi>
 300:	68 94       	set
 302:	b1 11       	cpse	r27, r1
 304:	8d c0       	rjmp	.+282    	; 0x420 <__fp_szero>
 306:	08 95       	ret

00000308 <__fixunssfsi>:
 308:	70 d0       	rcall	.+224    	; 0x3ea <__fp_splitA>
 30a:	88 f0       	brcs	.+34     	; 0x32e <__fixunssfsi+0x26>
 30c:	9f 57       	subi	r25, 0x7F	; 127
 30e:	90 f0       	brcs	.+36     	; 0x334 <__fixunssfsi+0x2c>
 310:	b9 2f       	mov	r27, r25
 312:	99 27       	eor	r25, r25
 314:	b7 51       	subi	r27, 0x17	; 23
 316:	a0 f0       	brcs	.+40     	; 0x340 <__fixunssfsi+0x38>
 318:	d1 f0       	breq	.+52     	; 0x34e <__fixunssfsi+0x46>
 31a:	66 0f       	add	r22, r22
 31c:	77 1f       	adc	r23, r23
 31e:	88 1f       	adc	r24, r24
 320:	99 1f       	adc	r25, r25
 322:	1a f0       	brmi	.+6      	; 0x32a <__fixunssfsi+0x22>
 324:	ba 95       	dec	r27
 326:	c9 f7       	brne	.-14     	; 0x31a <__fixunssfsi+0x12>
 328:	12 c0       	rjmp	.+36     	; 0x34e <__fixunssfsi+0x46>
 32a:	b1 30       	cpi	r27, 0x01	; 1
 32c:	81 f0       	breq	.+32     	; 0x34e <__fixunssfsi+0x46>
 32e:	77 d0       	rcall	.+238    	; 0x41e <__fp_zero>
 330:	b1 e0       	ldi	r27, 0x01	; 1
 332:	08 95       	ret
 334:	74 c0       	rjmp	.+232    	; 0x41e <__fp_zero>
 336:	67 2f       	mov	r22, r23
 338:	78 2f       	mov	r23, r24
 33a:	88 27       	eor	r24, r24
 33c:	b8 5f       	subi	r27, 0xF8	; 248
 33e:	39 f0       	breq	.+14     	; 0x34e <__fixunssfsi+0x46>
 340:	b9 3f       	cpi	r27, 0xF9	; 249
 342:	cc f3       	brlt	.-14     	; 0x336 <__fixunssfsi+0x2e>
 344:	86 95       	lsr	r24
 346:	77 95       	ror	r23
 348:	67 95       	ror	r22
 34a:	b3 95       	inc	r27
 34c:	d9 f7       	brne	.-10     	; 0x344 <__fixunssfsi+0x3c>
 34e:	3e f4       	brtc	.+14     	; 0x35e <__fixunssfsi+0x56>
 350:	90 95       	com	r25
 352:	80 95       	com	r24
 354:	70 95       	com	r23
 356:	61 95       	neg	r22
 358:	7f 4f       	sbci	r23, 0xFF	; 255
 35a:	8f 4f       	sbci	r24, 0xFF	; 255
 35c:	9f 4f       	sbci	r25, 0xFF	; 255
 35e:	08 95       	ret

00000360 <__floatunsisf>:
 360:	e8 94       	clt
 362:	09 c0       	rjmp	.+18     	; 0x376 <__floatsisf+0x12>

00000364 <__floatsisf>:
 364:	97 fb       	bst	r25, 7
 366:	3e f4       	brtc	.+14     	; 0x376 <__floatsisf+0x12>
 368:	90 95       	com	r25
 36a:	80 95       	com	r24
 36c:	70 95       	com	r23
 36e:	61 95       	neg	r22
 370:	7f 4f       	sbci	r23, 0xFF	; 255
 372:	8f 4f       	sbci	r24, 0xFF	; 255
 374:	9f 4f       	sbci	r25, 0xFF	; 255
 376:	99 23       	and	r25, r25
 378:	a9 f0       	breq	.+42     	; 0x3a4 <__floatsisf+0x40>
 37a:	f9 2f       	mov	r31, r25
 37c:	96 e9       	ldi	r25, 0x96	; 150
 37e:	bb 27       	eor	r27, r27
 380:	93 95       	inc	r25
 382:	f6 95       	lsr	r31
 384:	87 95       	ror	r24
 386:	77 95       	ror	r23
 388:	67 95       	ror	r22
 38a:	b7 95       	ror	r27
 38c:	f1 11       	cpse	r31, r1
 38e:	f8 cf       	rjmp	.-16     	; 0x380 <__floatsisf+0x1c>
 390:	fa f4       	brpl	.+62     	; 0x3d0 <__floatsisf+0x6c>
 392:	bb 0f       	add	r27, r27
 394:	11 f4       	brne	.+4      	; 0x39a <__floatsisf+0x36>
 396:	60 ff       	sbrs	r22, 0
 398:	1b c0       	rjmp	.+54     	; 0x3d0 <__floatsisf+0x6c>
 39a:	6f 5f       	subi	r22, 0xFF	; 255
 39c:	7f 4f       	sbci	r23, 0xFF	; 255
 39e:	8f 4f       	sbci	r24, 0xFF	; 255
 3a0:	9f 4f       	sbci	r25, 0xFF	; 255
 3a2:	16 c0       	rjmp	.+44     	; 0x3d0 <__floatsisf+0x6c>
 3a4:	88 23       	and	r24, r24
 3a6:	11 f0       	breq	.+4      	; 0x3ac <__floatsisf+0x48>
 3a8:	96 e9       	ldi	r25, 0x96	; 150
 3aa:	11 c0       	rjmp	.+34     	; 0x3ce <__floatsisf+0x6a>
 3ac:	77 23       	and	r23, r23
 3ae:	21 f0       	breq	.+8      	; 0x3b8 <__floatsisf+0x54>
 3b0:	9e e8       	ldi	r25, 0x8E	; 142
 3b2:	87 2f       	mov	r24, r23
 3b4:	76 2f       	mov	r23, r22
 3b6:	05 c0       	rjmp	.+10     	; 0x3c2 <__floatsisf+0x5e>
 3b8:	66 23       	and	r22, r22
 3ba:	71 f0       	breq	.+28     	; 0x3d8 <__floatsisf+0x74>
 3bc:	96 e8       	ldi	r25, 0x86	; 134
 3be:	86 2f       	mov	r24, r22
 3c0:	70 e0       	ldi	r23, 0x00	; 0
 3c2:	60 e0       	ldi	r22, 0x00	; 0
 3c4:	2a f0       	brmi	.+10     	; 0x3d0 <__floatsisf+0x6c>
 3c6:	9a 95       	dec	r25
 3c8:	66 0f       	add	r22, r22
 3ca:	77 1f       	adc	r23, r23
 3cc:	88 1f       	adc	r24, r24
 3ce:	da f7       	brpl	.-10     	; 0x3c6 <__floatsisf+0x62>
 3d0:	88 0f       	add	r24, r24
 3d2:	96 95       	lsr	r25
 3d4:	87 95       	ror	r24
 3d6:	97 f9       	bld	r25, 7
 3d8:	08 95       	ret

000003da <__fp_split3>:
 3da:	57 fd       	sbrc	r21, 7
 3dc:	90 58       	subi	r25, 0x80	; 128
 3de:	44 0f       	add	r20, r20
 3e0:	55 1f       	adc	r21, r21
 3e2:	59 f0       	breq	.+22     	; 0x3fa <__fp_splitA+0x10>
 3e4:	5f 3f       	cpi	r21, 0xFF	; 255
 3e6:	71 f0       	breq	.+28     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3e8:	47 95       	ror	r20

000003ea <__fp_splitA>:
 3ea:	88 0f       	add	r24, r24
 3ec:	97 fb       	bst	r25, 7
 3ee:	99 1f       	adc	r25, r25
 3f0:	61 f0       	breq	.+24     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3f2:	9f 3f       	cpi	r25, 0xFF	; 255
 3f4:	79 f0       	breq	.+30     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 3f6:	87 95       	ror	r24
 3f8:	08 95       	ret
 3fa:	12 16       	cp	r1, r18
 3fc:	13 06       	cpc	r1, r19
 3fe:	14 06       	cpc	r1, r20
 400:	55 1f       	adc	r21, r21
 402:	f2 cf       	rjmp	.-28     	; 0x3e8 <__fp_split3+0xe>
 404:	46 95       	lsr	r20
 406:	f1 df       	rcall	.-30     	; 0x3ea <__fp_splitA>
 408:	08 c0       	rjmp	.+16     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 40a:	16 16       	cp	r1, r22
 40c:	17 06       	cpc	r1, r23
 40e:	18 06       	cpc	r1, r24
 410:	99 1f       	adc	r25, r25
 412:	f1 cf       	rjmp	.-30     	; 0x3f6 <__fp_splitA+0xc>
 414:	86 95       	lsr	r24
 416:	71 05       	cpc	r23, r1
 418:	61 05       	cpc	r22, r1
 41a:	08 94       	sec
 41c:	08 95       	ret

0000041e <__fp_zero>:
 41e:	e8 94       	clt

00000420 <__fp_szero>:
 420:	bb 27       	eor	r27, r27
 422:	66 27       	eor	r22, r22
 424:	77 27       	eor	r23, r23
 426:	cb 01       	movw	r24, r22
 428:	97 f9       	bld	r25, 7
 42a:	08 95       	ret

0000042c <__mulsf3>:
 42c:	0a d0       	rcall	.+20     	; 0x442 <__mulsf3x>
 42e:	80 c0       	rjmp	.+256    	; 0x530 <__fp_round>
 430:	71 d0       	rcall	.+226    	; 0x514 <__fp_pscA>
 432:	28 f0       	brcs	.+10     	; 0x43e <__mulsf3+0x12>
 434:	76 d0       	rcall	.+236    	; 0x522 <__fp_pscB>
 436:	18 f0       	brcs	.+6      	; 0x43e <__mulsf3+0x12>
 438:	95 23       	and	r25, r21
 43a:	09 f0       	breq	.+2      	; 0x43e <__mulsf3+0x12>
 43c:	62 c0       	rjmp	.+196    	; 0x502 <__fp_inf>
 43e:	67 c0       	rjmp	.+206    	; 0x50e <__fp_nan>
 440:	ef cf       	rjmp	.-34     	; 0x420 <__fp_szero>

00000442 <__mulsf3x>:
 442:	cb df       	rcall	.-106    	; 0x3da <__fp_split3>
 444:	a8 f3       	brcs	.-22     	; 0x430 <__mulsf3+0x4>

00000446 <__mulsf3_pse>:
 446:	99 23       	and	r25, r25
 448:	d9 f3       	breq	.-10     	; 0x440 <__mulsf3+0x14>
 44a:	55 23       	and	r21, r21
 44c:	c9 f3       	breq	.-14     	; 0x440 <__mulsf3+0x14>
 44e:	95 0f       	add	r25, r21
 450:	50 e0       	ldi	r21, 0x00	; 0
 452:	55 1f       	adc	r21, r21
 454:	aa 27       	eor	r26, r26
 456:	ee 27       	eor	r30, r30
 458:	ff 27       	eor	r31, r31
 45a:	bb 27       	eor	r27, r27
 45c:	00 24       	eor	r0, r0
 45e:	08 94       	sec
 460:	67 95       	ror	r22
 462:	20 f4       	brcc	.+8      	; 0x46c <__mulsf3_pse+0x26>
 464:	e2 0f       	add	r30, r18
 466:	f3 1f       	adc	r31, r19
 468:	b4 1f       	adc	r27, r20
 46a:	0a 1e       	adc	r0, r26
 46c:	22 0f       	add	r18, r18
 46e:	33 1f       	adc	r19, r19
 470:	44 1f       	adc	r20, r20
 472:	aa 1f       	adc	r26, r26
 474:	66 95       	lsr	r22
 476:	a9 f7       	brne	.-22     	; 0x462 <__mulsf3_pse+0x1c>
 478:	77 95       	ror	r23
 47a:	30 f4       	brcc	.+12     	; 0x488 <__mulsf3_pse+0x42>
 47c:	f3 0f       	add	r31, r19
 47e:	b4 1f       	adc	r27, r20
 480:	0a 1e       	adc	r0, r26
 482:	12 1e       	adc	r1, r18
 484:	08 f4       	brcc	.+2      	; 0x488 <__mulsf3_pse+0x42>
 486:	63 95       	inc	r22
 488:	33 0f       	add	r19, r19
 48a:	44 1f       	adc	r20, r20
 48c:	aa 1f       	adc	r26, r26
 48e:	22 1f       	adc	r18, r18
 490:	76 95       	lsr	r23
 492:	99 f7       	brne	.-26     	; 0x47a <__mulsf3_pse+0x34>
 494:	87 95       	ror	r24
 496:	20 f4       	brcc	.+8      	; 0x4a0 <__mulsf3_pse+0x5a>
 498:	b4 0f       	add	r27, r20
 49a:	0a 1e       	adc	r0, r26
 49c:	12 1e       	adc	r1, r18
 49e:	63 1f       	adc	r22, r19
 4a0:	44 0f       	add	r20, r20
 4a2:	aa 1f       	adc	r26, r26
 4a4:	22 1f       	adc	r18, r18
 4a6:	33 1f       	adc	r19, r19
 4a8:	86 95       	lsr	r24
 4aa:	a9 f7       	brne	.-22     	; 0x496 <__mulsf3_pse+0x50>
 4ac:	86 2f       	mov	r24, r22
 4ae:	71 2d       	mov	r23, r1
 4b0:	60 2d       	mov	r22, r0
 4b2:	11 24       	eor	r1, r1
 4b4:	9f 57       	subi	r25, 0x7F	; 127
 4b6:	50 40       	sbci	r21, 0x00	; 0
 4b8:	8a f0       	brmi	.+34     	; 0x4dc <__mulsf3_pse+0x96>
 4ba:	e1 f0       	breq	.+56     	; 0x4f4 <__mulsf3_pse+0xae>
 4bc:	88 23       	and	r24, r24
 4be:	4a f0       	brmi	.+18     	; 0x4d2 <__mulsf3_pse+0x8c>
 4c0:	ee 0f       	add	r30, r30
 4c2:	ff 1f       	adc	r31, r31
 4c4:	bb 1f       	adc	r27, r27
 4c6:	66 1f       	adc	r22, r22
 4c8:	77 1f       	adc	r23, r23
 4ca:	88 1f       	adc	r24, r24
 4cc:	91 50       	subi	r25, 0x01	; 1
 4ce:	50 40       	sbci	r21, 0x00	; 0
 4d0:	a9 f7       	brne	.-22     	; 0x4bc <__mulsf3_pse+0x76>
 4d2:	9e 3f       	cpi	r25, 0xFE	; 254
 4d4:	51 05       	cpc	r21, r1
 4d6:	70 f0       	brcs	.+28     	; 0x4f4 <__mulsf3_pse+0xae>
 4d8:	14 c0       	rjmp	.+40     	; 0x502 <__fp_inf>
 4da:	a2 cf       	rjmp	.-188    	; 0x420 <__fp_szero>
 4dc:	5f 3f       	cpi	r21, 0xFF	; 255
 4de:	ec f3       	brlt	.-6      	; 0x4da <__mulsf3_pse+0x94>
 4e0:	98 3e       	cpi	r25, 0xE8	; 232
 4e2:	dc f3       	brlt	.-10     	; 0x4da <__mulsf3_pse+0x94>
 4e4:	86 95       	lsr	r24
 4e6:	77 95       	ror	r23
 4e8:	67 95       	ror	r22
 4ea:	b7 95       	ror	r27
 4ec:	f7 95       	ror	r31
 4ee:	e7 95       	ror	r30
 4f0:	9f 5f       	subi	r25, 0xFF	; 255
 4f2:	c1 f7       	brne	.-16     	; 0x4e4 <__mulsf3_pse+0x9e>
 4f4:	fe 2b       	or	r31, r30
 4f6:	88 0f       	add	r24, r24
 4f8:	91 1d       	adc	r25, r1
 4fa:	96 95       	lsr	r25
 4fc:	87 95       	ror	r24
 4fe:	97 f9       	bld	r25, 7
 500:	08 95       	ret

00000502 <__fp_inf>:
 502:	97 f9       	bld	r25, 7
 504:	9f 67       	ori	r25, 0x7F	; 127
 506:	80 e8       	ldi	r24, 0x80	; 128
 508:	70 e0       	ldi	r23, 0x00	; 0
 50a:	60 e0       	ldi	r22, 0x00	; 0
 50c:	08 95       	ret

0000050e <__fp_nan>:
 50e:	9f ef       	ldi	r25, 0xFF	; 255
 510:	80 ec       	ldi	r24, 0xC0	; 192
 512:	08 95       	ret

00000514 <__fp_pscA>:
 514:	00 24       	eor	r0, r0
 516:	0a 94       	dec	r0
 518:	16 16       	cp	r1, r22
 51a:	17 06       	cpc	r1, r23
 51c:	18 06       	cpc	r1, r24
 51e:	09 06       	cpc	r0, r25
 520:	08 95       	ret

00000522 <__fp_pscB>:
 522:	00 24       	eor	r0, r0
 524:	0a 94       	dec	r0
 526:	12 16       	cp	r1, r18
 528:	13 06       	cpc	r1, r19
 52a:	14 06       	cpc	r1, r20
 52c:	05 06       	cpc	r0, r21
 52e:	08 95       	ret

00000530 <__fp_round>:
 530:	09 2e       	mov	r0, r25
 532:	03 94       	inc	r0
 534:	00 0c       	add	r0, r0
 536:	11 f4       	brne	.+4      	; 0x53c <__fp_round+0xc>
 538:	88 23       	and	r24, r24
 53a:	52 f0       	brmi	.+20     	; 0x550 <__fp_round+0x20>
 53c:	bb 0f       	add	r27, r27
 53e:	40 f4       	brcc	.+16     	; 0x550 <__fp_round+0x20>
 540:	bf 2b       	or	r27, r31
 542:	11 f4       	brne	.+4      	; 0x548 <__fp_round+0x18>
 544:	60 ff       	sbrs	r22, 0
 546:	04 c0       	rjmp	.+8      	; 0x550 <__fp_round+0x20>
 548:	6f 5f       	subi	r22, 0xFF	; 255
 54a:	7f 4f       	sbci	r23, 0xFF	; 255
 54c:	8f 4f       	sbci	r24, 0xFF	; 255
 54e:	9f 4f       	sbci	r25, 0xFF	; 255
 550:	08 95       	ret

00000552 <__udivmodsi4>:
 552:	a1 e2       	ldi	r26, 0x21	; 33
 554:	1a 2e       	mov	r1, r26
 556:	aa 1b       	sub	r26, r26
 558:	bb 1b       	sub	r27, r27
 55a:	fd 01       	movw	r30, r26
 55c:	0d c0       	rjmp	.+26     	; 0x578 <__udivmodsi4_ep>

0000055e <__udivmodsi4_loop>:
 55e:	aa 1f       	adc	r26, r26
 560:	bb 1f       	adc	r27, r27
 562:	ee 1f       	adc	r30, r30
 564:	ff 1f       	adc	r31, r31
 566:	a2 17       	cp	r26, r18
 568:	b3 07       	cpc	r27, r19
 56a:	e4 07       	cpc	r30, r20
 56c:	f5 07       	cpc	r31, r21
 56e:	20 f0       	brcs	.+8      	; 0x578 <__udivmodsi4_ep>
 570:	a2 1b       	sub	r26, r18
 572:	b3 0b       	sbc	r27, r19
 574:	e4 0b       	sbc	r30, r20
 576:	f5 0b       	sbc	r31, r21

00000578 <__udivmodsi4_ep>:
 578:	66 1f       	adc	r22, r22
 57a:	77 1f       	adc	r23, r23
 57c:	88 1f       	adc	r24, r24
 57e:	99 1f       	adc	r25, r25
 580:	1a 94       	dec	r1
 582:	69 f7       	brne	.-38     	; 0x55e <__udivmodsi4_loop>
 584:	60 95       	com	r22
 586:	70 95       	com	r23
 588:	80 95       	com	r24
 58a:	90 95       	com	r25
 58c:	9b 01       	movw	r18, r22
 58e:	ac 01       	movw	r20, r24
 590:	bd 01       	movw	r22, r26
 592:	cf 01       	movw	r24, r30
 594:	08 95       	ret

00000596 <_exit>:
 596:	f8 94       	cli

00000598 <__stop_program>:
 598:	ff cf       	rjmp	.-2      	; 0x598 <__stop_program>
